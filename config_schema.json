{
  "title": "ModSettings",
  "description": "Modifies the orginal Settings class provided by the user",
  "type": "object",
  "properties": {
    "files_to_register_topic": {
      "title": "Files To Register Topic",
      "description": "The name of the topic to receive events informing about new files that shall be made available for download.",
      "example": "internal_file_registry",
      "env_names": [
        "dcs_files_to_register_topic"
      ],
      "type": "string"
    },
    "files_to_register_type": {
      "title": "Files To Register Type",
      "description": "The type used for events informing about new files that shall be made available for download.",
      "example": "file_registered",
      "env_names": [
        "dcs_files_to_register_type"
      ],
      "type": "string"
    },
    "download_served_event_topic": {
      "title": "Download Served Event Topic",
      "description": "Name of the topic used for events indicating that a download of a specified file happened.",
      "example": "file_downloads",
      "env_names": [
        "dcs_download_served_event_topic"
      ],
      "type": "string"
    },
    "download_served_event_type": {
      "title": "Download Served Event Type",
      "description": "The type used for event indicating that a download of a specified file happened.",
      "example": "donwload_served",
      "env_names": [
        "dcs_download_served_event_type"
      ],
      "type": "string"
    },
    "unstaged_download_event_topic": {
      "title": "Unstaged Download Event Topic",
      "description": "Name of the topic used for events indicating that a download was requested for a file that is not yet available in the outbox.",
      "example": "file_downloads",
      "env_names": [
        "dcs_unstaged_download_event_topic"
      ],
      "type": "string"
    },
    "unstaged_download_event_type": {
      "title": "Unstaged Download Event Type",
      "description": "The type used for event indicating that a download was requested for a file that is not yet available in the outbox.",
      "example": "unstaged_download_requested",
      "env_names": [
        "dcs_unstaged_download_event_type"
      ],
      "type": "string"
    },
    "file_registered_event_topic": {
      "title": "File Registered Event Topic",
      "description": "Name of the topic used for events indicating that a file has been registered for download.",
      "exmaple": "file_downloads",
      "env_names": [
        "dcs_file_registered_event_topic"
      ],
      "type": "string"
    },
    "file_registered_event_type": {
      "title": "File Registered Event Type",
      "description": "The type used for event indicating that that a file has been registered for download.",
      "example": "file_registered",
      "env_names": [
        "dcs_file_registered_event_type"
      ],
      "type": "string"
    },
    "service_name": {
      "title": "Service Name",
      "default": "dcs",
      "env_names": [
        "dcs_service_name"
      ],
      "type": "string"
    },
    "service_instance_id": {
      "title": "Service Instance Id",
      "description": "A string that uniquely identifies this instance across all instances of this service. A globally unique Kafka client ID will be created by concatenating the service_name and the service_instance_id.",
      "example": "germany-bw-instance-001",
      "env_names": [
        "dcs_service_instance_id"
      ],
      "type": "string"
    },
    "kafka_servers": {
      "title": "Kafka Servers",
      "description": "A list of connection strings to connect to Kafka bootstrap servers.",
      "example": [
        "localhost:9092"
      ],
      "env_names": [
        "dcs_kafka_servers"
      ],
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "db_connection_str": {
      "title": "Db Connection Str",
      "description": "MongoDB connection string. Might include credentials. For more information see: https://naiveskill.com/mongodb-connection-string/",
      "example": "mongodb://localhost:27017",
      "env_names": [
        "dcs_db_connection_str"
      ],
      "type": "string",
      "writeOnly": true,
      "format": "password"
    },
    "db_name": {
      "title": "Db Name",
      "description": "Name of the database located on the MongoDB server.",
      "example": "my-database",
      "env_names": [
        "dcs_db_name"
      ],
      "type": "string"
    },
    "outbox_bucket": {
      "title": "Outbox Bucket",
      "env_names": [
        "dcs_outbox_bucket"
      ],
      "type": "string"
    },
    "drs_server_uri": {
      "title": "Drs Server Uri",
      "description": "The base of the DRS URI to access DRS objects. Has to start with 'drs://' and end with '/'.",
      "example": "drs://localhost:8080/",
      "env_names": [
        "dcs_drs_server_uri"
      ],
      "type": "string"
    },
    "retry_access_after": {
      "title": "Retry Access After",
      "description": "When trying to access a DRS object that is not yet in the outbox, instruct to retry after this many seconds.",
      "default": 120,
      "env_names": [
        "dcs_retry_access_after"
      ],
      "type": "integer"
    },
    "s3_endpoint_url": {
      "title": "S3 Endpoint Url",
      "description": "URL to the S3 API.",
      "example": "http://localhost:4566",
      "env_names": [
        "dcs_s3_endpoint_url"
      ],
      "type": "string"
    },
    "s3_access_key_id": {
      "title": "S3 Access Key Id",
      "description": "Part of credentials for login into the S3 service. See: https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html",
      "example": "my-access-key-id",
      "env_names": [
        "dcs_s3_access_key_id"
      ],
      "type": "string"
    },
    "s3_secret_access_key": {
      "title": "S3 Secret Access Key",
      "description": "Part of credentials for login into the S3 service. See: https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html",
      "example": "my-secret-access-key",
      "env_names": [
        "dcs_s3_secret_access_key"
      ],
      "type": "string",
      "writeOnly": true,
      "format": "password"
    },
    "s3_session_token": {
      "title": "S3 Session Token",
      "description": "Part of credentials for login into the S3 service. See: https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html",
      "example": "my-session-token",
      "env_names": [
        "dcs_s3_session_token"
      ],
      "type": "string",
      "writeOnly": true,
      "format": "password"
    },
    "aws_config_ini": {
      "title": "Aws Config Ini",
      "description": "Path to a config file for specifying more advanced S3 parameters. This should follow the format described here: https://boto3.amazonaws.com/v1/documentation/api/latest/guide/configuration.html#using-a-configuration-file",
      "example": "~/.aws/config",
      "env_names": [
        "dcs_aws_config_ini"
      ],
      "type": "string",
      "format": "path"
    },
    "host": {
      "title": "Host",
      "description": "IP of the host.",
      "default": "127.0.0.1",
      "env_names": [
        "dcs_host"
      ],
      "type": "string"
    },
    "port": {
      "title": "Port",
      "description": "Port to expose the server on the specified host",
      "default": 8080,
      "env_names": [
        "dcs_port"
      ],
      "type": "integer"
    },
    "log_level": {
      "title": "Log Level",
      "description": "Controls the verbosity of the log.",
      "default": "info",
      "env_names": [
        "dcs_log_level"
      ],
      "enum": [
        "critical",
        "error",
        "warning",
        "info",
        "debug",
        "trace"
      ],
      "type": "string"
    },
    "auto_reload": {
      "title": "Auto Reload",
      "description": "A development feature. Set to `True` to automatically reload the server upon code changes",
      "default": false,
      "env_names": [
        "dcs_auto_reload"
      ],
      "type": "boolean"
    },
    "workers": {
      "title": "Workers",
      "description": "Number of workers processes to run.",
      "default": 1,
      "env_names": [
        "dcs_workers"
      ],
      "type": "integer"
    },
    "api_root_path": {
      "title": "Api Root Path",
      "description": "Root path at which the API is reachable. This is relative to the specified host and port.",
      "default": "/",
      "env_names": [
        "dcs_api_root_path"
      ],
      "type": "string"
    },
    "openapi_url": {
      "title": "Openapi Url",
      "description": "Path to get the openapi specification in JSON format. This is relative to the specified host and port.",
      "default": "/openapi.json",
      "env_names": [
        "dcs_openapi_url"
      ],
      "type": "string"
    },
    "docs_url": {
      "title": "Docs Url",
      "description": "Path to host the swagger documentation. This is relative to the specified host and port.",
      "default": "/docs",
      "env_names": [
        "dcs_docs_url"
      ],
      "type": "string"
    },
    "cors_allowed_origins": {
      "title": "Cors Allowed Origins",
      "description": "A list of origins that should be permitted to make cross-origin requests. By default, cross-origin requests are not allowed. You can use ['*'] to allow any origin.",
      "example": [
        "https://example.org",
        "https://www.example.org"
      ],
      "env_names": [
        "dcs_cors_allowed_origins"
      ],
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "cors_allow_credentials": {
      "title": "Cors Allow Credentials",
      "description": "Indicate that cookies should be supported for cross-origin requests. Defaults to False. Also, cors_allowed_origins cannot be set to ['*'] for credentials to be allowed. The origins must be explicitly specified.",
      "example": [
        "https://example.org",
        "https://www.example.org"
      ],
      "env_names": [
        "dcs_cors_allow_credentials"
      ],
      "type": "boolean"
    },
    "cors_allowed_methods": {
      "title": "Cors Allowed Methods",
      "description": "A list of HTTP methods that should be allowed for cross-origin requests. Defaults to ['GET']. You can use ['*'] to allow all standard methods.",
      "example": [
        "*"
      ],
      "env_names": [
        "dcs_cors_allowed_methods"
      ],
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "cors_allowed_headers": {
      "title": "Cors Allowed Headers",
      "description": "A list of HTTP request headers that should be supported for cross-origin requests. Defaults to []. You can use ['*'] to allow all headers. The Accept, Accept-Language, Content-Language and Content-Type headers are always allowed for CORS requests.",
      "example": [],
      "env_names": [
        "dcs_cors_allowed_headers"
      ],
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "api_route": {
      "title": "Api Route",
      "default": "/ga4gh/drs/v1",
      "env_names": [
        "dcs_api_route"
      ],
      "type": "string"
    }
  },
  "required": [
    "files_to_register_topic",
    "files_to_register_type",
    "download_served_event_topic",
    "download_served_event_type",
    "unstaged_download_event_topic",
    "unstaged_download_event_type",
    "file_registered_event_topic",
    "file_registered_event_type",
    "service_instance_id",
    "kafka_servers",
    "db_connection_str",
    "db_name",
    "outbox_bucket",
    "drs_server_uri",
    "s3_endpoint_url",
    "s3_access_key_id",
    "s3_secret_access_key"
  ],
  "additionalProperties": false
}